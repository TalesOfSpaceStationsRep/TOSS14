using Content.Shared.Administration;
using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Administration.UI.Tabs.PlayerTab;

[GenerateTypedNameReferences]
public sealed partial class PlayerTabEntry : PanelContainer
{
    [Dependency] private readonly IEntityManager _entMan = default!;

    public NetEntity? PlayerEntity;

    public PlayerTabEntry(PlayerInfo player, StyleBoxFlat styleBoxFlat)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
        var roles = _entMan.System<SharedRoleSystem>();

        UsernameLabel.Text = player.Username;

        if (!player.Connected)
            UsernameLabel.StyleClasses.Add("Disabled");

        JobLabel.Text = player.StartingJob;
        CharacterLabel.Text = player.CharacterName;

        if (player.IdentityName != player.CharacterName)
            CharacterLabel.Text += $" [{player.IdentityName}]";

        AntagonistLabel.Text = Loc.GetString(player.Antag ? "player-tab-is-antag-yes" : "player-tab-is-antag-no");
        RoleTypeLabel.Text = roles.GetRoleSubtypeLabel(player.RoleProto.Name, player.Subtype, false);

        RoleTypeLabel.FontColorOverride = player.RoleProto.Color;
        BackgroundColorPanel.PanelOverride = styleBoxFlat;
        OverallPlaytimeLabel.Text = player.PlaytimeString;
        PlayerEntity = player.NetEntity;
    }
}
